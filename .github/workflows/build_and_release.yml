name: Build and Release
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Build binary
        run: cargo build --release

      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ./target/release/nagamochi

  lint:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run Clippy
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Run formatter
        run: cargo fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run tests
        run: cargo test --release

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - run: mkdir temp
        with:
          working-directory: ~/
      - run: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ~/temp/
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          version-file: "./Cargo.toml"
          version-path: "package.version"
          output-file: "false"
      - name: Create Release
        uses: ncipollo/release-action@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          artifacts: ~/temp/nagamochi
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
